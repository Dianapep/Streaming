package programs;
import java.util.ArrayList;
import java.util.Scanner;

public class Streaming {

    static Scanner input = new Scanner(System.in);
    static ArrayList<Conta> contasBancarias;

    public static void main(String[] args) {
        contasBancarias = new ArrayList<Conta>();
        operacoes();
        dentro();
    }

    public static void operacoes() {

        System.out.println("==============================================================");
        System.out.println("***** Crie sua conta no Dlinks para poder assistir de tudo ***");
        System.out.println("--------------------------------------------------------------");
        System.out.println("|   Opção 1 - Criar conta       |");
        System.out.println("|   Opção 2 - Sobre o sistema   |");
        int operacao = input.nextInt();

        switch (operacao) {
            case 1:
                criarConta();
                break;

            case 2:
                informacao();
                break;

            default:
                System.out.println("tem isso não");
                operacoes();
                break;
        }
    }

    public static void dentro() {
        System.out.println("==============================================");
        System.out.println("-------------Bem vindo Dlinkst ---------------");
        System.out.println("----------------------------------------------");
        System.out.println("|   1: Series           |");
        System.out.println("|   2: Filmes           |");
        System.out.println("|   3: inf da sua conta |");
        System.out.println("|   4: sair ;-;         |");
        int dentro = input.nextInt();

        switch (dentro) {


            case 1:
                series();
                break;
            case 2:
                Filmes();
                break;
            case 3:
                listarContas();
                break;

            case 4:

                System.out.println("mas ja?? aaa;-;");
                System.exit(0);





        }


    }


    public static void criarConta() {


        System.out.println("\nNome: ");
        String nome = input.next();

        System.out.println("\nCPF: ");
        String cpf = input.next();

        System.out.println("Email: ");
        String email = input.next();

        Pessoa cliente = new Pessoa(nome, cpf, email);

        Conta conta = new Conta(cliente);

        contasBancarias.add(conta);
        System.out.println("--- Sua conta foi criada com sucesso! ---");


    }

    public static void listarContas() {
        if (contasBancarias.size() > 0) {
            for (Conta conta : contasBancarias) {
                System.out.println(conta);
            }
        } else {
            System.out.println("--- Não há contas cadastradas ---");
        }

        dentro();
    }


    public static void informacao() {


        System.out.println("bem vindo ao Dlinkst ");
        System.out.println("Descrição:             ");
        System.out.println("aqui na Dlinkst nos queremos te dar o maximo de entretenimento" + "da forma mais rapida e facil temos varias series e flimes que acabaram de sair dos cinemas :)");
        System.out.println("e o melhor totalmente gratuito SIM nosso sistem é free para todos");
        operacoes();
    }

    public static void series() {




        System.out.println("===============================================");
        System.out.println("***** seu catalogo de series disponiveis ******");
        System.out.println("-----------------------------------------------");
        System.out.println("|   Opção 1 - breaking bad         |");
        System.out.println("|   Opção 2 - The Mandalorian      |");
        System.out.println("|   Opção 3 - Dr house             |");
        System.out.println("|   Opção 4 - Descrição das Series |");
        System.out.println("|   Opção 5 - Voltar               |");
        int series = input.nextInt();
        switch (series){

            case 1:
                System.out.println
                        ("⢰⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢸⣿⠛⠛⠛⠻⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢸⣿⠀⣿⣿⠆⢸⣿⠿⢿⠿⢿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢸⣿⠀⣤⣄⡀⢻⣿⠀⢈⣴⣾⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢸⣿⠀⠿⠿⠃⢸⣿⠀⢸⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢸⣿⣶⣶⣶⣾⣿⣿⣶⣾⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠘⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⡄\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⡇\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⢰⣶⣦⠈⣿⣿⣿⣿⣿⣿⡇\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⢈⣉⡁⠰⣿⣟⣡⣤⡈⣿⡇\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⢸⣿⠿⠀⣸⡏⢡⣶⠀⣿⡇\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣧⣤⣤⣤⣶⣿⣷⣤⣴⣧⣿⡇\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠇");


                System.out.println(
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠆⠜⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⠿⠿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⡏⠁⠀⠀⠀⠀⠀⣀⣠⣤⣤⣶⣶⣶⣶⣶⣦⣤⡄⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣷⣄⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⡧⠇⢀⣤⣶⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣾⣮⣭⣿⡻⣽⣒⠀⣤⣜⣭⠐⢐⣒⠢⢰⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣏⣿⣿⣿⣿⣿⣿⡟⣾⣿⠂⢈⢿⣷⣞⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣷⣶⣾⡿⠿⣿⠗⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠻⠋⠉⠑⠀⠀⢘⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⡿⠟⢹⣿⣿⡇⢀⣶⣶⠴⠶⠀⠀⢽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⡿⠀⠀⢸⣿⣿⠀⠀⠣⠀⠀⠀⠀⠀⡟⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⡿⠟⠋⠀⠀⠀⠀⠹⣿⣧⣀⠀⠀⠀⠀⡀⣴⠁⢘⡙⢿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⠗⠂⠄⠀⣴⡟⠀⠀⡃⠀⠉⠉⠟⡿⣿⣿⣿⣿\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⠾⠛⠂⢹⠀⠀⠀⢡⠀⠀⠀⠀⠀⠙⠛⠿⢿");

                System.out.println("⢾⣷⣷⣾⣷⣿⣾⣷⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣾⣿⣷⣿⣷⣿⣷⣿⣿⣾⣷⣿⣾⣷⣿⣾⣷⣿⣾⣿⣿⣿⣿⣿⣿⣿⣾⣾⣷⣿⣷⣿⣷⣿⣾⣶⣷⣾⣶⣿⣾⣷⣾⣶⣷⣶⢶⡶⣶⢶⠶⡶⡓⠞⠶⡀\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣯⡿⣽⢾⡭⣟⡵⣫⢎⡳⢥⠙⡌⠱⠀\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣳⣭⡛⠿⣿⣿⣿⣿⣿⣯⣷⢿⣯⢿⡽⣺⢵⡫⢼⡑⠎⡔⢢⠡⢀⠃⠀\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠲⠈⠙⢿⣿⣷⢿⣯⣟⡾⢧⣻⢱⢣⠝⣢⠙⡌⠘⠄⡁⠂⠁⠀\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣛⢦⡱⢂⠞⣌⠳⡍⢯⣙⢯⣛⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠛⢷⣄⠀⠸⢿⣿⣟⡾⣝⢾⡹⢆⠯⡘⡜⢠⠡⢀⠁⠂⠀⠀⠀⠀\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢍⡳⣍⠶⣩⠏⡞⣬⠳⣜⠣⡝⠮⣝⡾⢯⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡯⢀⠀⠹⣦⠀⠸⣿⡿⣽⢮⣳⠹⣌⠖⡡⢘⡀⢂⠀⠄⠀⠀⠀⠀⠀\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢇⡻⡱⢍⡚⡔⢫⠱⢪⡕⣊⠳⣍⠳⣌⠿⣭⢳⣏⢾⡽⣿⣿⣿⣿⣿⣿⣿⣿⣆⠉⠀⠀⣿⣧⠀⠈⢿⣗⡏⢶⡙⡔⢊⠱⠠⠐⡀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣡⢣⠙⢢⠱⢌⢣⡙⠦⣙⡔⢣⠎⡵⢌⠻⡔⢯⡞⣭⢟⣷⣻⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⢸⣾⣷⡀⠀⢻⣞⡱⢞⢨⠁⠎⡁⠂⠄⠀⠁⠀⠀⠀⠀⠀\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠜⡄⢣⠉⠆⡑⢈⠰⢈⠒⡅⢮⣑⢪⡱⣎⢳⡘⢧⡻⣜⢯⡶⣯⣟⣿⣿⣿⣿⣿⣿⣿⠁⠀⢸⣿⣿⣷⡀⠀⠹⣏⢆⠣⡘⢠⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢣⠘⣤⠉⠂⡔⢠⠃⡎⠘⢱⠂⠓⣦⠑⣮⢣⡜⢣⢻⣬⣷⢹⣷⣿⣯⣿⣿⣿⣿⣿⣿⣧⠀⠀⣿⢻⠈⢱⠀⠀⣿⡌⡆⢱⠀⡌⠀⠂⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣏⢆⠁⡐⢂⠐⢌⡐⢠⡙⢬⣉⠳⣄⠳⣘⢎⡱⢍⠮⣝⣷⣻⢿⣿⣿⣯⣿⣿⣿⣿⣿⣿⡄⠀⢸⡘⢧⠀⠁⠀⢻⡇⡜⢠⠒⠀⡁⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⢛⠿⡻⢎⡐⠡⠂⠌⠠⢀⠡⢘⠤⢌⡳⢾⠱⡌⢆⡳⢌⠳⣎⢼⣻⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠆⠀⠘⡇⠀⢳⡀⠀⢸⡗⢌⠢⠈⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡻⣌⠳⣡⢣⢀⠑⡈⠄⢁⠂⢀⡀⠊⡐⢣⢏⣶⠩⢦⡁⢎⡕⢪⠖⣽⣿⡽⣿⣿⣻⣿⣿⣿⣿⡿⠀⠀⠈⣿⡀⠀⠃⢀⣼⡏⡐⢂⠉⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⢧⣍⢳⣤⣣⣼⣦⣤⣤⣀⡌⢀⠠⠁⡐⢀⣾⡀⡙⣿⡀⠌⣎⢣⢛⣼⣷⣿⣿⣿⣽⣿⣿⣿⡿⢤⡀⠀⠀⢿⠀⠀⠀⢸⣿⠡⢘⠠⢈⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣧⢻⣾⣿⣿⠿⡿⣿⢿⣿⣿⣿⣷⣾⣯⣽⣿⠀⢹⣿⣷⣈⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡈⠁⠀⢸⠀⢀⠀⣾⡟⢄⠣⢐⠀⢂⠈⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡯⣷⣿⣟⢿⡁⣄⣀⣩⣭⣾⣿⣿⣿⣿⣿⠟⠋⠀⠂⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣶⣧⣿⣾⣿⣝⣿⣦⠀⢸⡆⠘⣶⣿⡴⣈⠦⢁⠊⠄⠠⠁⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡳⣍⠮⣱⣾⣿⠿⠿⣿⣿⣿⣿⣿⣿⡿⢙⡶⢁⠠⢑⣾⣿⣿⣿⣿⣿⣿⣿⡻⠿⣿⢿⣿⣿⣿⣿⣿⣿⣷⠀⠀⣇⠀⢷⣸⡗⡰⢌⠢⠁⠌⡀⠄⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣵⣉⠖⡩⠅⠠⠈⠓⠠⠞⠛⢛⣻⣿⡿⠃⡔⠀⠆⢼⣯⣿⣿⣿⣿⣿⣿⣿⣽⢷⣎⡿⣿⡿⣿⣯⣿⣻⣿⡃⠀⣿⡀⠈⢿⣏⠴⡈⢆⡉⠐⠠⡀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡞⣜⠸⠠⠙⡄⠂⠄⡀⠀⠤⢾⠿⠋⠀⣁⠠⠑⡌⢰⢻⣿⣿⣿⣿⣿⣿⣿⣿⣟⡾⣷⢯⡿⣽⣳⣟⣿⣿⠁⢀⣿⢱⣿⠸⣿⡒⡍⢆⡌⢡⠡⠐⡀⠀⠀⠀⠀⠀⠀\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣌⠳⡑⢆⠀⠁⠄⡀⢈⠐⠁⠀⠀⠌⡁⢂⠡⠘⢠⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⡷⣿⢯⣿⣿⣿⣿⠀⢸⡟⣰⠿⣟⣿⡕⣎⢣⠜⣢⢁⠣⣀⠡⠀⠀⠀⠀⠀\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⢳⡉⢆⠣⢀⠠⠐⠀⢂⠠⠀⠀⢐⠰⢈⣌⠁⠆⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣾⣿⣿⠀⠈⠀⣿⣿⢱⣿⡽⣬⢓⡞⢤⢋⠴⡀⠆⠡⠀⠀⠀⠀\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⢣⡝⣌⠒⡄⠀⠄⡁⠀⠀⣄⣾⠃⢌⣰⢾⣀⣠⠋⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⠀⠀⠀⣿⣷⣟⣯⣳⡝⡾⣜⣣⢏⠶⣉⢎⡡⢌⠠⠁⠀\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡧⣘⠤⡋⢄⠃⡀⠀⢂⠿⢋⠡⢘⠸⠟⡻⡅⢦⣙⣶⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣯⣻⣿⣏⠀⠀⠀⣿⡿⣽⣞⣷⣻⡵⣏⣞⢮⡳⣍⢦⠓⣌⠢⡑⠠\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡱⢊⡕⢊⡔⠡⣀⡍⡐⢦⠞⣃⠦⣉⠱⢈⣿⡿⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣹⣿⠻⣆⠀⢸⣿⣿⢷⣻⣞⣷⣻⡽⣮⢷⣻⣜⢮⣛⡴⣃⢇⠣\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣕⢣⡜⢢⠐⣡⢩⣵⡎⢆⠭⣐⠢⡑⢊⠼⣿⡷⣇⢞⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⡿⢴⣿⣿⣿⣿⣿⣿⣟⣿⡷⣿⣽⢯⣟⡷⣞⣯⡞⡶⣭⢎⡳\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡲⣌⠡⢃⢼⡟⣤⣽⣴⣦⣥⣶⣤⣧⣬⣽⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⣟⣾⣿⣿⣿⣿⣿⣿⣻⣯⣿⣟⣯⣿⣯⣿⡽⣾⣽⣻⣼⣣⢟\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣗⣮⢓⠆⡌⣿⣍⠲⡐⢆⡒⡌⢦⣩⣜⣩⣝⣭⣟⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣷⣿⣟⣾⢷⣳⣟⣾\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⡭⣞⠜⡫⠔⡭⡙⢦⡑⣎⢧⣷⣿⢿⡻⣟⡾⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⣿⡿⣯⣿⣾\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣞⡬⣫⠵⣉⠦⡙⢢⠱⣌⠒⡌⣌⢢⡙⣬⣙⡷⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿\n" +
                        "⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢇⣿⣻⢤⠛⣄⠣⡘⢧⠘⡠⢇⡸⣄⡻⣼⢧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣻⣯⣟⡬⢷⢿⣦⣧⣷⣾⣿⣯⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⢈⣿⣷⡈⢿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡿⣿⣽⣿⣿⠿⡿⣿⣷⣾⣷⣿⣾⣿⣾⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣂⣸⣿⣿⣷⢀⢿⣿⣿⣿⣿⣿⣟⣻⠿⢿⣿⣿⣿⣿⣿⣿\n" +
                        "⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡷⣭⣛⣷⣯⣻⢱⢏⡟⢿⣿⣾⣽⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣚⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣭⣙⡛⠿⢿\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣽⡲⣝⠦⣍⠻⢿⣮⣜⡣⢞⡽⣏⡿⣹⢛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦\n" +
                        "⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣳⡝⣮⠽⣘⢳⠢⡜⡙⢻⣷⣮⣹⢼⡱⣮⢳⣳⣯⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣽⢎⡷⣙⢎⡱⠌⣅⠣⣀⠚⡝⠿⣿⣾⣿⣿⡟⣫⣵⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⡾⣱⣋⠞⡴⣉⠔⢢⠠⠑⣨⣿⠿⠛⣛⣻⣽⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣥⢫⣝⢲⡡⠞⡠⣥⣾⣿⣏⣼⣧⣬⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣷⣮⣧⣇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿");

                System.out.println("THE END");
                series();
                   break;

            case 2:

                System.out.println("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⢾⣷⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⣀⣾⣿⣯⠘⠶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠈⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣡⣾⣿⣿⠿⣿⠀⠀⠈⠳⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⢨⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⢀⣼⣹⣿⣿⣿⣶⣿⣶⣿⣵⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡶⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⣿⣿⡀⠀⠀⠀⠀⠀⠀⢀⣠⠔⠋⠁⠀⠀⢠⣾⣿⠻⣿⣿⣿⣿⡿⢿⣿⣿⠓⠿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡃⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⢿⡿⣷⡀⠀⠀⠀⣠⠔⠋⠀⠀⠀⠀⠀⠀⢸⣇⣼⡀⣿⣾⣿⣿⣯⠛⣧⣬⣷⣶⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⣤⣀⣤⣴⣶\n" +
                        "⠀⠀⠀⠀⠀⠀⢨⣿⣿⣿⡀⡠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣼⣿⣿⣿⣯⡾⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⡿⠋⠁\n" +
                        "⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠉⢿⣽⣿⣿⣏⣰⠟⡅⠘⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⠟⠁⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⢀⣽⣿⣿⡿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠇⠀⠀⢿⣿⣿⣿⡟⠀⠸⢄⣸⣇⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣾⠟⠁⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⢀⣴⢿⣷⣽⣿⣿⣿⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣼⣿⣿⣿⣷⣶⣿⡿⣟⣛⣿⣷⣶⣶⣶⣶⣤⣀⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⣿⣿⣶⣶⣿⣿⣿⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣴⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢋⡞⠃⠀⠈⠙⠻⣿⣍⣄⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣵⣾⣿⣿⡿⠟⠁⠀⠀⣿⡟⢸⣧⣤⡀⠀⠀⠀⠘⢿⣎⢦⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⢻⣿⡿⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⢀⡼⠟⣫⣿⡿⢋⣿⣿⣿⣿⠟⠉⠀⠀⠀⠀⢸⣿⡅⣾⣿⣿⣿⡦⠀⠀⠀⠈⣿⣎⣧⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠸⣿⣿⢷⡾⣦⡀⠀⠀⠀⠀⠀⣰⡿⠃⣼⣿⡟⣰⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣗⢙⢿⣿⣷⣆⡀⠀⠘⣿⠸⡄⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⢿⣿⣎⣷⡙⣯⣆⠀⠀⠀⣰⣿⠇⣸⡿⢿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣮⡿⣿⣿⣿⠖⣂⣿⣇⣧⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠘⣿⡻⣿⣷⠙⣿⣦⡀⢀⣿⡟⣾⡿⣿⣷⣿⣿⣿⣤⣄⡀⠠⠄⠀⣀⣤⣿⢧⣿⣿⣿⣿⣿⣿⣿⣷⣾⣛⣛⣫⣭⣭⣿⣿⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⡄⢿⣿⣷⣼⣿⣿⣟⣻⣾⣿⣿⡿⠿⣭⣍⡛⠻⠿⣿⣿⠟⠋⣾⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠍⡉⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣶⣿⣿⣾⣿⣿⣿⡿⣾⣿⣿⠁⠀⠀⠉⢻⡟⠛⠛⣦⡀⢀⣿⣻⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡶⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⢸⠃⠀⢀⣾⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣟⣯⠆⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⠀⠀⠀⠀⠀⣸⠀⢀⣿⣿⣣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣽⡆⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⣶⣿⡶⠿⢿⣿⣿⠿⣿⣷⣿⣿⣿⣿⣿⣿⣿⢻⣿⢿⣟⣛⢻⣿⡟⡄⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡙⠻⣦⣀⣃⣤⡀⠛⢧⡐⣿⠟⠛⠻⠿⢿⣿⣿⣿⣼⣿⡀⠉⢻⡶⣽⣿⣿⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣏⣿⡇⠉⠉⣿⣥⣬⣿⢿⣷⣿⣿⣿⣿⣿⣦⣴⢀⣦⣀⣼⢛⣿⣿⣿⣿⣄⠸⣿⣿⣿⣽⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⠧⠤⢠⣿⣿⡿⣿⡟⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣿⣷⣻⠀⣿⣿⠿⠉⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡿⡿⣿⣿⣾⣿⡿⣧⣽⣷⣽⣿⣿⣿⣿⣿⢿⠿⠿⠿⢿⣿⣿⣿⡇⢸⣿⣿⡆⢹⣿⣧⡀⡆⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⡇⠁⠹⣿⣿⣿⣷⠟⣹⣿⣿⣿⣿⣿⣿⣼⣷⣄⢀⠀⠀⠸⣿⣿⡇⠀⣿⣿⣧⠘⢹⣿⣷⡇⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣦⣤⣿⣿⣿⣶⣾⣿⣿⣿⣿⣿⣿⣿⣯⢹⢺⡄⢠⡄⡀⢸⣿⣷⠀⢹⣿⣿⡀⢸⣿⣿⡄⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡖⡈⣧⠀⢰⡄⠘⣿⣿⡅⠸⣿⣿⣿⣿⣿⣧⡿⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⢧⡙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣷⣽⡆⠀⠘⠀⢿⣿⣇⣤⣾⣿⡏⠉⠻⣍⠁⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⢸⡟⣮⡹⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠙⠹⡏⠙⠛⠿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣿⣿⡇⠈⣧⣌⠁⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⢸⣇⡇⠻⣾⣻⣿⣿⣿⣿⣿⣿⣟⠀⣧⠀⠀⣷⠀⣤⡀⠸⣿⣿⡆⢀⣤⣾⣿⣻⡟⢹⣿⣅⡄⠈⠿⠆⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⡏⢸⡿⡷⠸⠻⢿⣿⣻⣿⣿⣿⡽⣿⠐⢹⠀⠀⢸⣦⠈⣷⡄⢻⣿⣿⣿⣿⣿⣿⣿⠀⣸⣿⣿⣿⣷⣶⡶⠆⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡧⢸⣿⡇⢠⠀⠦⣿⣿⣿⣿⣿⣷⣿⡆⣼⡆⠀⠀⣿⠀⠘⣇⠸⣿⣿⣿⣿⣿⣿⣿⣧⣿⣿⣿⣿⠿⠛⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⠟⣿⣿⣧⣴⣶⠷⣿⣿⣿⣿⣿⣿⣹⣷⡙⣿⠀⠀⢹⡄⠀⠸⡆⠇⣿⡏⢹⣿⣿⣿⣾⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⡽⠃⠀⣿⣿⣿⣯⡿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣷⣽⣆⠀⠈⣧⠀⠀⣇⢸⣼⣿⣯⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⡿⠛⠓⠀⢀⣿⣿⡟⣟⢰⣾⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣦⠀⢻⡆⢘⣿⡸⢿⣿⠛⢿⡼⣿⣽⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⢀⣠⣾⣿⠟⠀⠀⠀⠀⠸⣿⣿⣗⣾⣾⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣷⠈⣷⣜⣿⣷⣾⠿⣷⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⣴⡿⢿⣷⣿⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⣸⣿⣿⠟⠈⠀⠘⣿⢿⠀⠀⢸⣆⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⢀⡾⠅⠀⣴⣿⠏⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⢹⣿⠟⣿⡏⠈⠉⠻⣿⠻⠟⠻⠟⠻⠯⠁⠀⠀⠈⠁⢿⣿⣀⡆⢰⣿⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⢠⡟⠈⢀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⡿⠿⠇⠐⠚⡛⠰⣿⡇⠀⠀⠀⠙⠀⠀⠀⠀⠀⠀⠀⠀⠀⠆⠀⠸⠿⠏⠁⠀⠻⠄⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣀⠉⠀⣠⢞⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⠰⠀⠀⠀⠀⠁⠀⠉⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠂⠀⠀⠀⠀⠀⢠⡆⠀⠐⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀");


                System.out.println("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠺⣿⣿⠿⠿⠿⠿⠿⢷⣶⣿⣿⣿⣿⣿⣿⣿⣿⣶⡾⠿⠿⠿⠿⠿⣿⣿⠗\n" +
                        "⠀⠈⠛⢷⣦⣀⡀⠀⣿⣿⠛⠉⠙⢿⡿⠋⠉⠛⣿⣿⠀⢀⣀⣴⡾⠛⠁⠀\n" +
                        "⠀⠀⠀⠀⠈⠙⠻⠷⢿⣿⣶⣦⣴⣞⣳⣦⣴⣶⣿⡿⠾⠟⠋⠁⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⢠⣤⣄⡉⠉⠛⠛⠛⠛⠉⢉⣠⣤⡄⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⡏⢀⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⣰⣷⣦⣄⣈⣉⣉⠉⠉⠀⠈⣉⣉⣁⣠⣴⣾⣆⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⢰⣷⣿⣿⣿⣿⣿⣿⣿⠀⢸⡇⠀⣿⣿⣿⣿⣿⣿⣿⣾⡆⠀⠀⠀\n" +
                        "⠀⠀⠀⢙⣿⠿⣿⣿⣿⣿⣿⣿⠀⢸⡇⠀⣿⣿⣿⣿⣿⣿⠿⣿⡋⠀⠀⠀\n" +
                        "⠀⠀⠀⠈⠿⠶⢿⣿⣿⣿⣿⣿⠀⢸⡇⠀⣿⣿⣿⣿⣿⡿⠶⠿⠁⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⠀⢸⡇⠀⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⠀⢸⡇⠀⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠛⠻⠿⣿⣿⣿⠀⢸⡇⠀⣿⣿⣿⠿⠟⠛⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");

                System.out.println("⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣟⣯⣿⣻⣽⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣟⡷⣯⣟⣷⣻⢯⣿⣻⣷⡿⣿⣿⢿⣿⡾⣿⣿⣿⣳⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣟⣾⣳⣟⡾⣽⣻⡷⣟⣾⣟⡿⣽⣿⣿⣿⣿⡿⣖⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣛⢾⡷⣯⢿⣽⣷⣿⣿⣿⣿⣻⣿⣿⣿⣾⣟⡱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠈⢩⢿⣽⢻⣾⣿⣿⣿⢻⣿⣿⠽⣿⣿⡿⢡⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠀⠀⢏⡮⢑⣾⠟⠣⠌⠃⠹⣉⠳⣍⠋⡱⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⠛⠋⠉⠀⠈⠉⠀⠁⠉⠉⠁⠈⠉⠉⠉⠛⠿⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠀⠚⠈⠀⠐⠈⠈⠀⠀⠀⢤⣄⡡⠦⢤⣵⣻⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⡟⠏⠉⠀⠀⠀⠀⠀⣀⠒⠤⢄⠀⠀⠀⠀⡀⢀⠉⠥⠀⠀⠀⠀⠀⠀⠈⠉⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠀⠀⠀⠀⠀⠠⣤⢤⣄⣀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠛⠛⠚⠟⠛⠻⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠉⠁⠀⠀⠀⠀⣀⡤⣶⣾⠧⠉⠒⠂⠤⠶⢶⣬⣉⡥⠷⠶⣲⣆⣀⢂⡤⣄⡀⣤⠔⢉⠈⠛⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠀⠀⠀⠀⠀⠀⠘⠀⠢⠌⡹⠟⣿⡻⣶⣶⣶⣤⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠻⠿⣿⠿⠓⠀⠀⢀⡀⡤⠤⢚⣩⠔⠒⠒⠢⢤⡴⠊⢉⢉⣍⢳⡾⡿⢿⣶⣤⣍⣲⠶⣶⣶⣤⡮⢥⢶⣥⣊⣠⢔⡟⢋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡌⠧⡌⢥⠛⠻⠿⡷⣿⣧⣴⣒⣓⡒⡀⠙⢧⣀⣱⠢⠤⣀⣀⠀⠀⢀⣠⣤⡖⠒⠾⣙⢣⠂⠤⢤⠱⣜⠠⣔⡸⣜⣶⠾⣏⣱⡽⢛⡡⡴⢮⠭⡽⣓⠾⣶⣞⢿⣳⣯⣿⣿⣿⣶⣿⢯⣿⣻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢀⠀⠄⠀⠀⠠⣀⠀⠀⠀⠀⠀⠸⡱⠘⡆⣍⠣⢓⡜⢬⣙⡛⡟⢿⢿⣿⣿⣦⣤⣀⡐⠰⢍⡼⢫⣴⣿⣶⣶⣾⣷⣩⣅⡛⢿⣶⠬⣟⣮⢳⣞⣽⡿⣯⢿⣾⣽⣯⣿⣽⣿⣿⣿⣷⣽⣛⡾⣽⣿⣧⣟⡾⣟⣯⣟⣾⢯⡷⣿⣻⢟⡿⣛⢟⡫⡝⣭⢳⡞⢶⣓⢮⡝⣎⣳⢎⣳⣝⣮⣳⣝⣮⡷⣽⣞⣷⣯⣿⣽⣾⣿⣽⣷⣿⣿⣿⣿⣿⣿\n" +
                        "⢂⠜⣠⠂⡀⠔⠢⡑⠠⢀⡀⠀⠀⢃⠇⡒⠤⡙⢢⠜⣢⠱⡜⣩⢎⡳⢮⡝⣯⢻⣿⣧⢑⡞⣴⣿⣟⠾⣵⢫⡟⣿⣿⣾⣽⣷⢺⡻⣼⣻⢧⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⢿⣿⣿⣿⣟⣷⣾⡽⣯⢿⣽⣻⡾⣯⢿⣻⣯⢳⡻⣜⢧⣞⣱⣟⡾⣯⣿⣿⣯⣿⣿⣿⣿⣿⣿⣾⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠐⠬⠄⢣⡴⠼⠓⠛⠛⢦⣭⠿⣄⠀⠚⠤⠣⢅⠣⡜⠤⡓⢬⡑⢮⡵⣫⢞⡵⣫⢞⣿⡿⣹⢯⡗⣾⣿⣿⣷⣿⣷⡿⣿⣿⣯⡻⣵⢯⣟⣿⣳⣿⣿⣿⣿⣿⣿⣿⣟⣷⣿⣷⣿⣾⣽⣿⣿⣿⣿⣿⣿⣯⡿⣷⣟⣿⣻⢷⣯⢷⡽⣯⢾⣼⣳⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣟⣿⡄⢉⡒⣉⠦⡑⢌⠲⣉⠶⣩⣓⠾⣵⣛⡾⣭⣟⣿⣷⡯⢧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣷⡹⡖⡾⣽⣿⣿⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⣿⢾⣽⣻⣾⢯⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠀⠀⠀⠀⠀⠀⣀⣠⡆⠀⢸⣿⣿⣿⣤⠰⢡⢆⡱⢊⡱⢌⡳⢥⣏⣿⡱⣯⢟⣽⣿⣿⡟⣶⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣳⢯⡝⡽⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢯⣿⣷⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠀⠀⠀⣠⣴⣿⡟⠈⠀⠀⠸⣿⣿⣿⣿⣷⣌⠢⣑⠣⡜⣣⢜⡳⢞⡶⣏⢷⣿⣿⣿⡿⣤⡿⣞⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡻⣜⢣⢰⣤⢯⣽⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣟⣷⣿⣿⣿⣿⣾⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢀⡄⢺⣵⣿⣿⣇⠀⠀⠀⠀⣭⢻⣿⣿⣿⣿⣷⣄⡣⠘⠥⣎⡝⣣⢟⣼⢯⣿⣿⣿⡷⣟⡳⣽⣾⣭⣿⣿⣻⡿⣟⡟⣯⢳⣝⢮⡿⣿⣾⣿⣿⣿⣿⣟⡿⣿⢿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢇⡎⢱⣾⣿⣿⣿⣷⣆⣰⣾⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣸⡸⣹⡿⢿⣿⣿⣿⣿⣿⣸⢷⡏⣿⡾⣷⠏⣷⢹⣶⢹⣾⣿⢹⡎⣹⢏⣿⣹⡏⣿⣹⣿⣿⣹⢿⣾⡿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣫⢜⣣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠈⠛⢿⣿⣿⣷⣿⣾⣽⣣⢿⣜⡿⣧⣿⣼⣿⣿⢮⣷⣹⣟⣾⣷⣿⣿⣿⣽⣷⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢆⣫⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣳⣿⣿⣿⣿⣿⣿⡿⠑⠂⡑⢢⣀⠀⠀⠈⠙⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⡿⢿⢿⡻⣟⢿⣛⣯⢟⡽⣏⣿⡽⣿⣹⢯⣿⡿⣿⢿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢎⡶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⣿⣻⣿⣿⣿⣿⠟⠀⢐⣒⣾⣿⡾⣦⣭⣵⣲⣰⣶⣾⣍⡹⠟⡿⢿⢿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⣟⢻⣛⡻⣍⣯⣶⣧⣾⣽⣻⢾⣵⣯⣿⣽⣯⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣾⣽⢯⣿⣽⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣯⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⠋⠀⣰⣻⣿⣿⣿⣿⣿⣿⣻⣵⣿⣿⣿⣼⢯⣽⣶⡴⣈⠗⢋⠙⣂⡐⣈⠉⡝⣙⢛⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣛⡻⢭⣫⣗⣺⣭⢷⣛⣷⢯⣿⣟⣿⣻⣾⣷⣻⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣷⠿⠛⡛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢠⠬⣟⣿⣾⣿⣿⣿⣻⣯⣽⣿⣿⣿⣟⣿⣛⣿⣷⣏⣟⡺⣥⡾⣵⡞⣥⡿⣼⣿⣿⣿⣿⣿⢿⣛⣯⣽⣞⣭⡷⣽⣻⢷⣟⡾⣳⣯⢿⡽⣯⣿⣻⣟⣯⣿⣯⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⢁⣴⣾⣿⣷⣽⣿⣿⣿⣿⣿⣿⠟⢋⣽⣶⣶⣬⡁⣺⣾⣿⢷⣿⣟⢾⣽⡻⣟⣿⣟⣿⣿⡿⣾⡿⣿⣯⣞⣭⣷⡷⣿⣳⢿⣻⣽⣿⣿⣿⣿⣿⣿⣿⣿⣾⣷⣿⢷⣻⡟⣧⠿⣾⣽⣳⣯⣿⣽⣿⣷⣿⣿⣿⣳⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⠟⣋⣉⣉⠁⠀⠀⠀⢈⠛⣟⣡⣒⣃⣈⠻⣿⣿⣆⡱⢣⣟⢰⡧⠾⢛⠯⢏⣞⡳⣽⢻⡽⢿⡽⣽⣻⣷⣾⣳⢯⣟⡷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣻⠾⣭⣟⣾⣟⣯⣿⣾⢮⣷⢿⣾⣿⡿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⢿⠿⡿⢿⠿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣾⡿⣿⢿⣙⣦⣼⣭⣶⣧⣬⣿⣿⣿⣿⣿⣿⣿⣏⣩⣿⢶⢧⣚⡕⣂⡐⠊⣄⠓⡩⢣⠞⢫⡼⣽⣻⣽⣳⡿⣟⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣾⣳⢯⣿⣹⢿⣿⣻⣷⣻⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣛⢯⡙⢮⡳⣭⠾⡹⣍⡳⢏⣳⢣⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡖⢠⢟⠒⢂⣰⠳⢣⣍⣴⡧⣵⢲⣏⣻⣿⣽⣷⢿⡹⣝⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡾⣷⣯⣿⣯⣿⣿⣷⣿⣿⣿⣟⣾⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣋⢖⣭⡗⣏⡷⣵⣮⣿⣟⣷⣿⣿⣶⣯⡾⣔⢯⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⣰⣿⣛⡿⣽⣻⡽⣭⢳⣟⣿⣽⣿⣿⣟⢮⡷⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡿⣞⣟⣿⡽⣷⡿⣟⣿⣿⣻⣯⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢦⣝⣮⣿⣿⠿⠟⠻⢷⡿⢿⠿⡿⢿⣿⣿⣿⣿⣿⣾⣝⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣼⣳⣿⣻⣿⣿⢷⣫⢟⣫⡝⣞⢯⡽⢬⢯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣧⣿⣳⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣳⣾⡟⣋⠅⣦⡀⢀⢆⡞⡽⣿⣿⣶⣶⣭⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⣿⣯⠿⣹⢮⡝⣮⣳⣽⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣶⠟⣡⣾⣵⡿⢲⡽⣿⣞⣾⣷⣎⡜⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣯⣟⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⢿⣜⣯⣷⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢃⡾⣿⣿⣿⣼⣳⣿⣿⣿⣿⣿⡿⢎⡱⣞⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⡟⢿⡛⡟\n" +
                        "⠀⠀⠀⠉⠉⠉⠉⠙⠛⠛⠛⠛⠛⠻⠿⠿⠿⠿⠿⠿⠿⠿⣿⣿⣿⣿⣿⣾⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⡼⣳⠿⣾⢿⡿⣿⠿⠿⢻⢛⠻⡹⢩⢍⢣⡑⢦⣑⢣⣜⣣⡞⣽\n" +
                        "⣂⠤⡠⢄⣀⠀⡄⠠⠤⠤⢀⣀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠙⠋⠛⠛⠛⠛⠟⠿⢻⠿⢿⢿⡿⣿⢿⡿⣿⢿⡿⣿⢿⡿⣿⠿⠿⠿⠿⠿⠿⠿⠿⡿⠿⡿⢿⠿⠿⡿⢟⠿⢿⡛⢏⢯⡙⢯⡛⣟⢛⡻⢝⢫⢏⡽⣙⢦⡙⡦⢥⣋⡴⣃⢖⢦⢫⡜⣣⢏⡳⣍⣳⢮⣧⣟⣾⣾⣿⣿⣿⣿⣿\n" +
                        "⣿⣞⣵⢯⣖⡿⣾⣽⢾⣱⡶⣦⣻⣬⢯⣭⢯⣝⣖⣲⣖⣴⣲⣒⡶⣒⣦⣰⢢⣤⢤⡤⢤⡤⣤⢤⣀⣤⣀⣀⣀⣀⣀⣀⣀⣌⣠⣁⠎⣌⢢⡱⣌⢦⡑⣎⢆⡱⣌⢦⡱⣌⣣⡍⣎⣍⢧⣍⣣⡝⣌⣧⡹⣬⣯⣕⣮⣜⢮⡕⡾⣜⣦⣻⢶⣹⢦⣿⡼⣯⣞⣮⡷⣽⢾⣽⣻⣷⣻⣾⣽⣾⣯⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣾⣻⣟⡾⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣷⣿⣾⣷⣿⣿⣿⣾⣽⣿⣾⣿⣽⣿⣿⣿⣿⣿⣾⣿⣽⣾⣷⣾⣳⣾⣶⣳⣮⣟⣾⣳⣽⣞⣶⣿⣾⣽⣳⣿⣞⣷⣿⣳⣿⣽⣾⣿⣿⣷⣿⣿⣾⣿⣿⣷⣿⣾⣯⣿⣿⣿⣿⣾⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣷⣿⡿⣜⣧⣻⣼⣧⣟⣭⣟⣽⣫⡟⣽⣫⣟⡿⣻⣟⣿⣻⣟⣿⣻⢿⢿⡿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣷⣿⣾⣷⣿⣾⣽⣾⣯⣿⣽⣿⣞⣷⣻⣾⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿");
                System.out.println("não assisti n sei oq tem mais :)");
                System.out.println("THE END");
                series();
                 break;


            case 3:
                System.out.println("não achei Ascii de Dr house ;-; (´°̥̥̥̥̥̥̥̥ω°̥̥̥̥̥̥̥̥｀)");
                series();

                break;
            case 4:
                resumodasseries();
                break;
            case 5:
                dentro();
                break;
            default:
                System.out.println("tem essa opção não man ");
                series();
                break;

        }


    }
    public static void Filmes(){
        System.out.println("===================================================");
        System.out.println("-----Escolha o filme que deseja assistir-----------");
        System.out.println("===================================================");
        System.out.println(" |    Opção 1- Nosferatu        |  ");
        System.out.println(" |   Opção 2- Jurassic Park     |  ");
        System.out.println(" |   Opção 3- Mario             |  ");
        System.out.println(" |   Opção 4- resumo dos filmes |  ");
        System.out.println(" |   Opção 5- Voltar            |  ");
        int Filmes = input.nextInt();
        switch (Filmes) {

            case 1:
                quebragalho();
                Filmes();
                break;
            case 2:
                System.out.println("⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5⬜⬜⬜⬜⬜⬜\n" +
                                "\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5⬛⬛⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬜⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬜⬜⬛⬜⬛⬜⬛⬜⬜⬜⬛⬜⬜⬜⬛⬜⬜⬛⬜⬜⬛⬜⬛⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬜⬜⬜⬛⬜⬛⬛⬜\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜⬛⬛⬜⬛⬜⬛⬛⬛⬛⬜⬜⬛⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜⬛⬛⬜⬛⬜⬛⬛⬛⬛⬜⬜⬛⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜⬛⬛⬜⬛⬜⬛⬛⬛⬛⬜⬜⬛⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬜⬛⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬜⬜⬛⬜⬛⬜⬛⬜⬜⬛⬛⬜⬜⬜⬛⬜⬛⬛⬜⬛⬛⬜⬛⬜⬛⬛⬛⬛⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬜⬜⬛⬛⬜⬜⬛⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬜⬛⬜⬜⬛⬜⬛⬜⬛⬛⬛⬛⬜⬜⬜⬜⬛⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬜⬛⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜⬛⬛⬜⬛⬜⬛⬜⬛⬛⬛⬛⬜⬜⬛⬛⬛⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬜⬜⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜⬛⬛⬜⬛⬜⬛⬜⬛⬛⬛⬛⬜⬜⬛⬛⬛⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬜⬜⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜⬛⬛⬜⬛⬜⬛⬜⬛⬛⬛⬛⬜⬜⬛⬛⬛⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬜⬜⬜⬜⬛⬜⬜⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬜⬛⬜⬜⬛⬜⬛⬜⬜⬛⬛⬛⬜⬜⬛⬛⬛⬛⬜⬛⬜⬛⬜⬛⬜⬛⬜⬛⬛⬜\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬜⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬜⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE5\n" +
                                "\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8⬛⬛⬛⬛\uD83D\uDFE8⬛⬛⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛⬛⬛⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛\uD83D\uDFE8⬛⬛\uD83D\uDFE8\uD83D\uDFE8⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\n" +
                                "⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5\uD83D\uDFE5⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜");
                System.out.println("⢀⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠈⠉⠙⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠈⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⢻⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠈⢿⣿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠙⠿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⢰⣿⠋⢻⡇⠈⠉⠙⣿⣿⣿⡏⠀⠀⠈⠉⠉⠛⠛⠓⠒⠒\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⣾⠁⠀⠀⠀⣿⡇⠻⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠟⠀⠀⠀⠀⠚⠛⠀⠚⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀");
                System.out.println("⠀⠀⣶⣿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠈⠿⣿⣿⣿⣿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⢈⣻⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣤⣤⣴⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠙⠛⠛⠛⠛⢻⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠠⠐⠤⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠉⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣤⣄⡀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠿⠟⠻⢿⣿⣿⣟⠛⠛⠛⠛⠛⠛⠻⠶⣤⡀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣷⠀⠀⠀⠙⠿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠉⠓\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢙⣿⡇⠀⠀⠀⠀⢸⣿⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣶⣿⣿⠀⠀⠀⢀⣠⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠉⠉⠋⠉⠀⠀⠀⠐⠺⠿⠿⠟⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");



                Filmes();
                break;
            case 3:
                System.out.println("⢀⣤⠶⠚⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠓⠶⣄⠀\n" +
                        "⣾⠁⠀⣿⣦⢸⡇⣛⡀⣀⢀⡀⢴⡦⢀⡤⣀⢀⣀⢀⡀⢀⡀⣶⠀⡠⢄⠀⠘⣧\n" +
                        "⢿⡀⠀⣿⠈⢿⡇⢿⠇⣿⠀⣿⢸⡇⠻⣏⡭⠸⡇⠸⡇⠻⣄⣿⠸⢇⡸⠇⢠⡟\n" +
                        "⠈⠻⠶⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⠶⠋⠀");
                System.out.println("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣶⠶⠒⠂⠀⠐⠶⠶⠶⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠟⠋⠀⣀⣤⢶⡿⠿⠿⢿⢶⣤⡀⠈⠙⠷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠋⠀⠀⢀⣾⠋⠀⣸⣧⡀⣰⣾⡆⠉⢿⣶⣤⠤⠀⠙⢷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠃⠀⠀⠀⢀⣾⠇⠀⣼⡿⠻⣿⡿⢻⣿⣆⠀⢻⣿⣤⣀⠀⠀⠹⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⠀⠀⠀⠀⢀⣸⣿⡄⢸⣿⠇⠀⠈⠀⠀⢻⣿⡄⣾⣿⣿⣿⣶⣄⠀⠈⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠏⠀⡀⠀⠀⢈⣸⣷⣽⣿⣦⣝⣀⣤⣤⣤⣤⣼⣭⣾⣿⣿⣿⣿⣿⣿⣷⠀⠈⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⢸⠏⠀⠀⠀⣤⣶⣶⣿⣿⣿⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣶⣯⣭⣛⣿⣿⣿⣿⣿⡄⠘⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⢀⡟⠀⢀⣶⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⠿⠛⠛⠛⠛⠿⢿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⡆⢹⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⢸⣿⣠⣿⣿⣿⣿⡿⢿⣿⣿⣿⣿⣿⣆⠄⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⠿⢿⣿⣿⡿⣿⣶⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⡿⠁⠁⡿⢏⣺⣽⣷⣯⣿⡄⠀⡀⠀⠀⣼⣻⡿⠧⣤⡈⠛⠂⠀⠻⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⡇⠀⠀⠉⡿⠋⢠⣶⣚⣿⡄⠀⠀⠀⢰⣿⣟⣳⣦⠀⢻⡀⠀⠀⠀⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⣀⡀⠈⢻⣿⡇⠀⠀⠀⡇⠀⣿⣿⣭⣿⣷⠀⠀⠀⢸⣿⣯⣿⡿⡇⠀⡇⠀⠀⠀⣿⣿⠋⠁⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⢰⣿⠋⠁⣸⣿⣿⠀⠀⠀⣧⠀⢻⣿⡿⠋⠁⠀⠀⠀⠀⠉⣻⣿⣿⣧⣀⠇⠀⠀⣴⣿⣿⡀⠀⢹⣷⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠸⡇⠀⣼⢻⣿⠃⢀⣶⣄⠀⠀⠈⠙⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠋⢀⣰⡇⠉⢻⣿⣷⡄⢸⡟⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⢷⡀⠈⠸⠟⠀⢸⣿⣿⣷⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣶⣿⣿⣿⡄⠈⣿⣿⣇⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠳⣄⠀⠀⠀⠸⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⡿⠃⠀⢸⣷⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢦⡀⠀⠈⠙⢿⣿⣿⣿⣧⣄⡀⠀⠀⠀⠀⣀⣤⣾⣿⣿⣿⠟⠉⠀⠀⣠⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⣄⠀⠀⠀⠙⠛⢿⡛⢿⣿⣿⡿⣿⣿⣿⠿⣻⠟⠛⠁⠀⠀⢀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⢤⡀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣴⣿⣤⡀⠀⠀⠀⠈⠉⠉⠁⠀⠀⠀⠀⠀⣰⣷⣿⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⠿⠋⢿⡿⠉⠻⢿⣷⣦⣄⣀⣀⣀⣀⣀⣠⣤⣾⣿⣿⣿⢿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⠏⠀⠀⢠⣿⠁⠀⠀⢸⣿⠋⠛⠛⠿⠿⢿⣿⣿⣿⣿⣿⢩⡀⠘⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⢀⣴⡟⠁⠀⠀⢀⣾⣷⣠⠤⣤⣸⡿⣿⣷⣶⣤⣤⣴⣶⣿⣿⢿⣿⣾⠿⠶⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⣠⡿⠋⠀⠀⠀⣀⣿⣿⠉⠀⠀⠈⢻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠈⢻⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⢀⣼⠏⠀⠀⠀⢀⣴⣿⡟⣧⠀⠀⠀⣰⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⡀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⡟⠿⣦⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⣴⡿⠁⠀⠀⠀⣰⣾⣿⡿⠃⠘⣷⣶⣾⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠾⣿⡶⣶⣿⡋⠘⣿⣿⣿⣿⣿⡇⠆⢽⣷⡀⠀⠀⠀\n" +
                        "⢠⣾⡛⠁⠀⠀⢠⣠⣿⣿⡿⠀⠀⠀⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠉⠁⠈⢿⣿⣿⣿⡿⠀⠆⠀⠙⣿⣧⡀⠀\n" +
                        "⠉⠉⠛⢶⣦⣠⣾⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣿⣿⣿⣃⣀⣠⣶⠿⠛⠉⠉⠀\n" +
                        "⠀⠀⠀⠀⠙⢿⣿⣿⡿⢻⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡏⢻⣿⣷⡽⠋⠀⠀⠀⠀⠀⠈\n" +
                        "⠀⠀⠀⠀⢄⠀⣹⠟⠁⢸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠙⣿⠁⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠈⢻⣿⠀⠀⠈⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⠀⠀⠻⡿⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⢹⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠃⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⢠⡄⠀⠀⢹⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣟⠀⠀⠀⡾⠀⠀⠀⣀⡀⠀⠀⠀\n" +
                        "⠀⠀⠉⡇⠀⠀⢸⠆⠀⠀⢸⡿⠀⠀⠀⠀⠀⠂⣦⣶⣶⣶⣶⣤⠴⣶⣦⣹⣷⣾⣶⡶⠐⠒⠒⠲⠂⠸⣿⡀⠀⠀⣧⠀⠀⣸⠋⠉⠀⠀⠀\n" +
                        "⠀⠀⠀⣿⡀⢠⣿⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣿⣿⣿⣤⣬⣿⣿⣿⣿⣯⣤⠖⠂⠀⠀⠀⠀⢿⡇⠀⠀⠹⣆⠀⢿⠀⠀⠀⠀⠀\n" +
                        "⠀⠴⠚⠛⠛⠉⠁⠀⠀⢸⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣿⣿⠉⠹⣿⣿⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⢸⣧⠀⠀⠀⠈⠙⠚⠓⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡇⠀⠀⢿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡇⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⢸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠁⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⢸⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡏⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠁⠀⠀⠀⠀⠀⠀⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡆⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⣸⣧⣤⣤⣄⣀⣀⠀⠀⠀⠀⠀⢠⣿⣿⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣤⣤⣿⡆⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⢀⣤⠞⠛⠀⠀⠈⠉⠉⠛⠻⣶⣤⣀⠀⠘⠛⣿⡀⠀⠀⠀⠀⠀⠀⣰⡇⠀⠀⢀⣠⣴⠞⠛⠋⠉⠁⠀⠀⠀⠙⢦⣄⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⣰⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣷⣶⣿⣿⠇⠀⠀⠀⠀⠀⠀⣿⣄⣠⡶⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀\n" +
                        "⠀⢠⣯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣻⠀⠀⠀⠀⠀⠀⠀⣿⡏⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣷⠀⠀⠀\n" +
                        "⠀⠸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣶⡿⠀⠀⠀⠀⠀⠀⠀⠘⣿⢆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⠀⠀⠀\n" +
                        "⠀⠀⢿⣿⣆⠀⠀⠀⠀⠀⠀⠀⢀⣠⣄⣀⡤⢆⣸⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣷⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⣿⠏⠀⠀⠀\n" +
                        "⠀⠀⠀⠙⠛⠻⠿⠿⠿⠾⠿⠿⠿⠟⠋⠉⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠂⠉⠛⠻⠿⠿⠿⠿⠿⠿⠿⠛⡛⠁⠀⠀⠀⠀");

                System.out.println("⠀⠀⠀⡠⠒⠉⢉⣑⠢⣄⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⡜⠀⠀⠎⢦⠀⣨⠞⠁⠀⠀⠙⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⢀⡀⠀⠀\n" +
                        "⠀⢸⠀⠀⠀⢂⠈⡟⢡⠎⣀⣤⠀⠀⡇⠀⠀⠀⠀⠀⡀⠀⡠⠊⢠⠞⢁⡽⡄⠀\n" +
                        "⠀⡇⠀⠀⠀⠀⣜⣤⡷⠉⠘⡠⠱⡴⠀⠀⠀⠀⠀⡏⠈⠳⠁⠀⠁⠠⠃⢀⠇⠀\n" +
                        "⠀⡇⠀⠀⠀⡸⢸⠁⠔⠒⣄⠃⢸⠜⠊⠉⠑⡄⠀⠈⡆⠀⡀⡀⠀⠀⠀⠎⠒⢢\n" +
                        "⠀⡼⠀⠀⠀⡗⠉⠀⠃⠀⢿⠄⠉⠀⠀⠀⠀⡸⠀⠀⣥⠀⠁⠡⠂⠀⢀⠤⠴⠊\n" +
                        "⢸⠀⠀⠀⢀⠑⠤⠤⢄⠀⢉⠀⢀⣀⣀⣀⣴⡇⠀⠘⣄⠀⠀⠀⢀⡤⠃⠀⠀⠀\n" +
                        "⠀⠣⢄⡰⠊⣑⠢⠄⠴⠁⢸⣿⣿⣿⣟⡛⡟⠀⢀⠎⠀⠑⠢⡤⠴⠃⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⢣⠀⠊⠑⠀⣀⠀⠀⠈⢟⠁⠲⡇⣧⡔⠁⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠉⠒⠒⠊⢣⠙⠦⡀⠀⠐⠂⡰⢻⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⢀⠤⡀⢸⣀⠦⢞⡖⠊⠹⠀⠸⡀⠀⠐⠣⡀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⣎⠉⠉⠉⠐⠃⠀⢱⡀⡠⠔⢏⠱⡀⡇⠀⠀⠙⠦⣀⠀⡘⢦⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⢉⡯⠀⠠⠇⠈⡽⠋⠀⠀⠈⢢⠈⠁⠀⠀⠀⠀⠀⠉⠁⠀⢣⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⡼⠂⠀⠈⠀⠈⣄⠀⢀⡤⠊⢉⠗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀\n" +
                        "⢸⣀⡠⢄⡀⠀⠀⠀⢉⠥⠓⠒⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠈⠁⠈⠉⡇⠀⠀⠀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠠⠊⢇⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⣇⠀⠸⡂⠀⠈⠑⠢⢤⣀⡀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⢏⢆⠀⠑⠦⢀⣀⡀⠴⢻⠈⡇⠀⠀⠀⠀⢠⠁⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠈⠢⢕⡢⢤⣀⣀⣀⡠⡞⢠⠁⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠓⠢⠔⠚⠁⡜⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣊⣁⣀⡀⠀⠀⢠⠁⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡮⠤⢄⡀⠉⠲⡀⠘⡀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⠉⠈⠑⢌⢢⠀⠈⢦⠃⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡀⠀⠀⣀⣇⢣⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠁⠀⠀⠀⢣⢣⠀⢸⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⡏⡆⡸⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⠄⣀⣴⠕⠉⠀⠀⠀⠀⠀⠀⠀⠀");
                System.out.println("⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠞⣹⡅⠀⣠⣶⡀⠙⢷⡀⠀⠀⠚⠀⠈⠉⠉⠍⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⣴⣿⣿⣾⡿⡍⣧⠀⠈⣷⠀⣒⢢⡳⣂⠀⠀⡀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢻⠃⣸⣿⠀⠻⠏⠀⣧⠙⣆⠀⣿⣂⡭⢁⣀⠨⣁⠄⠀⠀⡀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⡀⢻⡄⣿⠇⠀⠀⠀⠀⠸⡶⠋⣼⠳⡿⠏⠯⠃⠜⡩⠁⠀⡄⠀⣀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣥⣥⣬⣿⣾⣶⣶⣶⣶⡶⠦⠤⠾⠿⢷⣮⣶⣤⠴⠸⢥⣤⡁⠓⣄⠘⠳⡆⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣤⣀⡀⠉⠛⠶⣦⣴⣛⡆⣆⠁⠠⠤⠀⠀⠀⠀⡈⢿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⢿⣿⣿⣿⣿⣶⣤⣀⠀⠙⢿⣧⡓⣶⡀⢀⠓⠀⠀⠀⠁⠀⣻⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⡿⢷⣦⣄⡈⠛⢿⣿⡺⠐⠀⠀⠀⠀⠀⠋⠙⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠻⣿⡇⠀⠀⠀⠀⠀⣼⣿⠿⠛⠉⠙⠻⣿⣷⠀⠈⠙⠻⣶⣄⠹⣿⣾⣤⠦⠄⠀⠀⠀⠀⠈⠉⠻⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⣀⣙⡿⠀⠀⠀⠀⠀⠟⠁⣀⣠⣀⡀⠀⠙⠻⠇⠀⠀⠀⠈⠙⢿⣾⣿⣿⣷⣿⣗⣀⠀⠀⢀⠀⠀⠹⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⡸⢩⣭⣽⡄⠀⠀⠀⠀⣰⣿⣦⣄⠀⠈⢢⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣧⣤⣀⡀⠈⠂⠀⠀⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⠀⠁⠾⢿⣿⡇⠀⠀⠀⢠⣿⣿⣿⡜⣇⠀⠈⡆⠀⠀⠀⠀⠀⠀⢀⣼⣿⣟⣿⣿⣿⣿⣿⣿⠟⠂⠀⠀⢠⣿\n" +
                        "⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⣼⢿⣿⣿⠇⡼⠀⠀⡇⠀⠀⠀⠀⠀⢠⣿⡿⡿⣿⣿⣿⣿⡿⠛⠛⠛⠲⢤⣤⣿⣿\n" +
                        "⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣎⡛⢋⡴⠁⠀⣨⣠⡀⠀⠀⠀⠀⢸⣿⣷⣶⡾⣹⣿⠏⠀⠀⠀⠀⠀⠀⠉⣿⣿\n" +
                        "⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠋⢁⣀⣠⣾⣿⣿⣧⠀⠀⠀⠀⠀⠙⣿⠿⢧⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿\n" +
                        "⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⢿⣿⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿\n" +
                        "⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠈⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣷⣤⣄⣀⣀⣀⣀⣤⣴⣿⣿⣿⣿⣿⣿⣿⠟⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⠙⠛⢿⣿⣿⣿⣿⣿⣿⣿⡿⠻⠿⠿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣄⠀⠀⠀⠀⣀⣴⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣧⡀⠀⠉⠙⠣⠬⠽⠯⠥⠤⠤⠒⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣴⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣩⣿⠶⠶⢶⣶⠒⠒⠋⠉⣉⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣱⠋⠀⠀⠀⣼⢿⠀⣀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿");
                System.out.println("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠲⣄⢀⡀⠀⠀⠀⠀⠀⠀⢀⠄⠀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠈⠳⣕⢄⠀⠀⠀⠀⢠⣏⠀⠀⣹⡆⠀⠀⠀⠀⠀⠀⣀⡀⣀⠀⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⢸⡿⡷⣄⣤⣾⣿⣯⣿⣿⣿⣧⡀⠀⠀⢀⠀⠀⠈⣻⣿⣻⢿⣶⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⠀⡖⣯⢳⣿⣿⣿⡟⠛⡞⣿⣽⣿⣿⣧⣼⠃⢸⣧⣷⣿⡟⣷⣯⡟⣾⢻⡞⣿⡆⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠠⠤⣀⡀⠀⠀⠀⠀⣀⣼⣧⠽⠒⠋⠉⠉⠉⠉⠉⠙⠓⠿⠿⠛⠋⠉⣄⠀⢻⣿⣿⡿⣽⣳⢯⡿⣽⢯⡿⣽⣷⠀⠀⠀⠀⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠱⡀⠀⠈⠉⢓⢾⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⡄⠀⠐⢹⣿⡷⣯⢿⡽⣯⢿⡽⣷⣿⠀⢀⣤⣷⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠘⢦⠀⣠⢯⡿⠋⠀⠀⠀⠀⢀⣀⠀⠀⢀⣠⣆⣴⡄⣀⠀⢄⠂⠄⡷⠻⣦⣤⣾⣿⣽⣯⡿⣽⢿⣾⡉⢏⡿⣿⣿⣻⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⢿⣵⠟⠀⢀⡠⠔⠚⠉⣡⡈⠉⠉⠛⠻⣿⣿⣿⣷⣮⣦⣴⣾⣷⣿⠿⠿⠾⣌⣛⡟⠉⣻⣯⣿⣧⠨⣽⣿⣞⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⣼⠏⠀⡔⠁⠀⠀⠀⣀⢴⣹⠶⢳⣀⠀⢻⣿⣛⡹⠿⠿⣿⣭⠝⠀⠀⠀⠀⠈⠹⣷⣤⣿⣈⣽⣻⠵⠿⠿⣭⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⣠⣼⡟⠀⣸⠀⠀⠀⠀⣦⣾⣿⣿⣿⣿⡿⠟⠚⠋⢄⡀⠀⢰⠋⢳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠈⠀⠀⠐⠋⣟⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⢄⡀⠀⠀⠀⠈⡷⡿⠀⠀⡇⠀⠀⢠⣮⣁⣽⣿⣿⠟⠋⠁⠀⠀⢀⠞⠻⣦⢾⣦⡾⠁⠀⢠⢶⣷⡀⠀⠀⠀⠀⠀⠈⣇⠀⠀⠀⣠⡾⣼⡟⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠉⠲⢤⣠⡴⣹⠃⠀⠀⣧⠀⢠⣾⣿⣿⣿⠏⠀⠀⠀⠱⣽⠞⢻⠦⡤⢿⣌⢿⣿⣤⠀⠈⣿⠿⣷⡄⣀⠀⠀⠀⣠⠹⣄⣠⠾⢋⡴⢇⢣⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠘⢷⡟⠀⠀⠀⣿⢤⠘⣿⣿⣿⡏⠀⢠⡀⠀⠀⣸⣷⢪⠝⣰⢃⡞⢮⣿⣿⡄⠀⢹⣶⣿⣿⣶⡴⢶⣿⣲⣯⣿⣿⡏⡙⣬⠼⠋⠀⠀⠀⠀⠀⠀⣠⡄⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⢸⠁⠀⠀⣸⠇⢸⣿⠏⣿⣿⡁⠀⠀⢿⣆⡾⠀⣿⣇⠹⣆⢏⡸⢆⡈⣹⣷⡀⢸⠏⢸⣿⣿⣷⣿⣿⣿⣿⣿⣾⣇⣾⢀⣶⣆⣀⣀⣀⣰⠶⡿⢱⠎⣀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠸⠀⠀⢀⡏⢀⣿⣽⠲⢾⣿⡇⠀⠠⢜⢢⠟⣦⡼⢧⢋⡖⢎⡱⠮⢵⡏⡹⡇⠀⠑⣿⡿⠛⣿⣿⣿⣿⡿⣭⣟⣹⣿⣿⣾⣿⡟⢏⡱⢌⢣⡱⢣⣫⢖⢧⣋⠖⠄\n" +
                        "⠀⠀⠀⠀⢠⠀⠀⠀⡘⠁⣼⡿⠁⠀⠀⠉⠛⠦⣵⣎⣦⠕⢊⣀⣊⣜⠸⣏⡛⡛⠞⡹⠳⣷⠀⠀⠀⠁⠀⠋⠉⠉⠉⠀⠻⣧⣿⣿⣿⣿⢣⡙⣌⠲⣩⢲⡱⣣⠏⣎⣓⡬⠆⠀\n" +
                        "⠀⠀⠀⠀⠎⠀⠀⠠⠁⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⢢⡔⡿⠀⠑⠨⠙⠶⣥⣆⣑⠌⢣⡀⠀⠀⠀⢀⠀⣀⠂⣄⡾⢩⣿⣹⣻⣿⠋⠛⠛⠶⣇⢇⡚⡥⢞⡭⣚⠼⣱⡀\n" +
                        "⠀⠀⠀⠀⣽⠀⠀⠄⢐⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⣌⠳⣼⡅⠈⡲⢦⣉⠒⡰⢈⠉⡉⢉⣽⡷⣶⣟⡛⠻⢤⡃⠊⡤⣞⣿⣿⣿⣿⣆⠀⠀⣠⠞⢾⡴⡙⡮⠆⠉⢚⠀⠃\n" +
                        "⠀⠀⠀⠀⣯⠽⠖⠖⢻⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢌⠻⣜⢛⢦⡁⢆⡉⡙⠁⠂⠀⣴⡞⢯⡜⢧⡹⣛⣦⡀⠉⠓⠛⠶⠾⣿⣿⣿⣿⣷⣦⣽⣦⣤⠷⠋⠁⠀⠀⠀⠀⠀\n" +
                        "⢀⣠⠴⠚⠁⢠⠠⡀⠼⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢌⢣⡝⡌⠦⡉⢆⡐⠄⠁⣴⣞⠳⣜⢣⠞⣥⠳⣍⠞⣵⡀⠀⠀⠀⠀⠀⠉⠙⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠘⠻⢦⣱⣌⢢⡑⣌⠲⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠌⡜⡲⠜⢨⠓⠈⢄⣠⣴⢛⢧⠪⡝⣌⢧⣋⠶⡹⢌⡻⢼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠈⠉⠉⠉⢉⡇⠀⠀⠀⠀⠀⠀⠀⠀⡀⢢⠑⡬⢱⢩⠟⠙⠛⠛⠒⣳⢏⠶⣙⠼⣘⠦⣍⢮⡱⣍⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠄⢢⢅⢣⠚⡔⢣⠏⠀⠀⠀⠀⠀⣟⢎⡳⣉⠮⢥⢫⠴⣢⢓⢾⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⢀⠇⡸⢃⠼⡘⠟⣸⠟⠀⠀⠀⠀⠀⢸⣛⡜⢣⡛⡼⣃⢟⡼⣣⢟⡻⢼⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⠀⠀⠠⠨⣐⢪⢑⡋⣎⣱⠽⠃⠀⠀⠀⠀⠀⠀⣿⢄⡏⢧⡙⢶⠩⡞⢴⢣⠎⣽⡷⣿⣻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠈⠈⣏⠉⣻⣆⠀⠀⠀⠀⠀⠀⠀⠈⠚⠾⠧⠾⠥⠿⠼⠾⠾⠽⠾⠓⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠘⠦⣀⠀⢀⡤⠒⢦⣠⠖⠚⣟⡎⠙⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                        "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠑⠒⠤⠞⠻⠦⢄⡟⠋⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
                Filmes();
                break;
            case 4:
                filmeresumo();

                break;
            case 5:
                dentro();
                break;

            default:
                System.out.println("não tem;-;");
                Filmes();
        }


    }


    public static void resumodasseries() {
        System.out.println("--------------------------------------");
        System.out.println("-----escolha qual resumo voce quer----");
        System.out.println("|        Opção 1 - Breaking Bad      |");
        System.out.println("|        Opção 2 - The Mandalorian   |");
        System.out.println("|         Opção 3 - Dr house         |");
        System.out.println("|          Opção 4 - Voltar          |");
        System.out.println("--------------------------------------");
        int resumodasseries = input.nextInt();
        switch (resumodasseries) {

            case 1:
                System.out.println("Breking Bad:     ");
                System.out.println("Professor de química com câncer fabrica metanfetamina com ex-aluno para garantir futuro da família.");
                resumodasseries();
                break;
            case 2:
                System.out.println("The Mandalorian:   ");
                System.out.println("The Mandalorian é uma série de aventura em que um caçador protege uma criança valiosa.");
                resumodasseries();
                break;
            case 3:
                System.out.println("Dr House:    ");
                System.out.println("\n" +
                        "Médico brilhante e misantropo resolve casos médicos complexos com métodos não convencionais.");
                resumodasseries();
                break;
            case 4:
                series();
                break;

            default:
                System.out.println("não tem essa opção");
                resumodasseries();
        }


    }

     public static void quebragalho() {


         System.out.println(" não tinha arte nem do Nosferatu nem de Dr house ;-;");
         System.out.println("⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                 "⠀⠀⠀⠀⢀⡤⠖⠋⠉⠉⠉⠉⠙⠲⣦⣀⠀⠀⠀⠀⠀\n" +
                 "⠀⠀⠀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀\n" +
                 "⠀⠀⡼⢁⡠⢼⠁⠀⢱⢄⣀⠀⠀⠀⠀⠀⠎⢿⡄⠀⠀\n" +
                 "⠀⣸⠁⠀⣧⣼⠀⠀⣧⣼⠉⠀⠀⠀⠀⠀⠐⢬⣷⠀⠀\n" +
                 "⡼⣿⢀⠀⣿⡟⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⢹⣧⠀\n" +
                 "⣇⢹⠀⠁⠈⠀⠉⠃⠈⠃⠀⠀⠀⠀⠀⠀⠀⠀⡰⢸⡇\n" +
                 "⠙⢿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣏⣈⣉⣤⠿⠁\n" +
                 "⠀⣠⣾⣿⠤⡀⠀⠀⠀⠀⠀⢀⣤⣶⣿⣿⣿⣿⣅⠀⠀\n" +
                 "⢰⣧⣿⣿⣿⣦⣉⡐⠒⠒⢲⣿⣿⣿⣿⣿⣿⣶⣿⣧⠀\n" +
                 "⠘⠿⢿⣿⣿⣿⡿⠿⠛⠿⠿⠿⣿⣿⣿⣿⣿⣿⡿⠟⠀\n" +
                 "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠀");
         Filmes();
     }
     public  static void filmeresumo()   {
         System.out.println("---------------------------------------");
         System.out.println("-----escolha qual resumo voce quer-----");
         System.out.println("|        Opção 1 - Nosferatu          |");
         System.out.println("|        Opção 2 - Jurassic Park      |");
         System.out.println("|          Opção 3 - Mario            |");
         System.out.println("|          Opção 4 - Voltar           |");
         System.out.println("---------------------------------------");
          int filmeresumo = input.nextInt();
           switch (filmeresumo){

               case 1:
                   System.out.println("Nosferatu:       ");
                   System.out.println("Nosferatu é um clássico do cinema de terror alemão, adaptação não autorizada de Drácula, dirigido por F.W. Murnau em 1922.");
                   System.out.println("Eh um filme do balacubaco ta so deixando claro");
                   filmeresumo();
                   break;
               case 2:
                   System.out.println("Jurassic Park:         ");
                   System.out.println("Parque temático de dinossauros torna-se perigoso quando criaturas escapam e atacam visitantes.");
                   System.out.println("obs: meu filme favorito");
                   filmeresumo();
                   break;
               case 3:
                   System.out.println("Mario:           ");
                   System.out.println("Dois irmãos encanadores são transportados para um mundo paralelo e lutam contra Bowser para salvar a princesa.");
                   filmeresumo();
                   break;
               case 4:
                   Filmes();
                   break;



           }


       }

}



